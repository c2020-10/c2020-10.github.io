<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>0x00基本算法</title>
    <url>/2022/02/21/0x00%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><blockquote>
<p>通常以二进制形式进行$\&amp;,|,\^,&gt;&gt;,&lt;&lt;$运算</p>
</blockquote>
<h3 id="a-b"><a href="#a-b" class="headerlink" title="a^b"></a><a href="https://www.acwing.com/problem/content/91/">a^b</a></h3><blockquote>
<p>求 a 的 b 次方对 p 取模的值.</p>
</blockquote>
<h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>%p;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=(<span class="type">long</span> <span class="type">long</span>)res*a%p;</span><br><span class="line">        a=(<span class="type">long</span> <span class="type">long</span>)a*a%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res%p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;p;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">qmi</span>(n,m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="64位整数乘法"><a href="#64位整数乘法" class="headerlink" title="64位整数乘法"></a><a href="https://www.acwing.com/problem/content/92/">64位整数乘法</a></h3><blockquote>
<p>该做法可以为了防止在计算时出现ll溢出</p>
</blockquote>
<h4 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ULL;</span><br><span class="line">ULL a,b,p;</span><br><span class="line"></span><br><span class="line"><span class="function">ULL <span class="title">qad</span><span class="params">(ULL a,ULL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ULL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=(res+a)%p;</span><br><span class="line">        a=(a+a)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">qad</span>(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="最短Hamilton路径"><a href="#最短Hamilton路径" class="headerlink" title="最短Hamilton路径"></a><a href="https://www.acwing.com/problem/content/93/">最短Hamilton路径</a></h3><blockquote>
<p>考察二进制枚举</p>
</blockquote>
<h4 id="code-2"><a href="#code-2" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">21</span>;</span><br><span class="line"><span class="type">int</span> f[<span class="number">1</span>&lt;&lt;N][N],n;</span><br><span class="line"><span class="type">int</span> d[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            cin&gt;&gt;d[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(i&gt;&gt;j&amp;<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">                    <span class="keyword">if</span>(i-(<span class="number">1</span>&lt;&lt;j)&gt;&gt;k&amp;<span class="number">1</span>)</span><br><span class="line">                        f[i][j]=<span class="built_in">min</span>(f[i][j],f[(i-(<span class="number">1</span>&lt;&lt;j))][k]+d[k][j]);</span><br><span class="line">    cout&lt;&lt;f[(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="起床困难综合症"><a href="#起床困难综合症" class="headerlink" title="起床困难综合症"></a><a href="https://www.acwing.com/problem/content/1000/">起床困难综合症</a></h3><blockquote>
<p>枚举二进制下的每一位,通过该方法枚举，计算出每一位可获得的Max值，再进行|,即可得到所求值</p>
</blockquote>
<h4 id="code-3"><a href="#code-3" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;PII;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">PII p[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">opt</span><span class="params">(<span class="type">int</span> key,<span class="type">int</span> lo)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i].x==<span class="number">1</span>)key=key&amp;(p[i].y&gt;&gt;lo&amp;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p[i].x==<span class="number">2</span>)key=key|(p[i].y&gt;&gt;lo&amp;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> key=key^(p[i].y&gt;&gt;lo&amp;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">char</span> op[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> key;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;key;</span><br><span class="line">        <span class="keyword">if</span>(*op==<span class="string">&#x27;A&#x27;</span>)p[i].x=<span class="number">1</span>,p[i].y=key;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(*op==<span class="string">&#x27;O&#x27;</span>)p[i].x=<span class="number">2</span>,p[i].y=key;</span><br><span class="line">        <span class="keyword">else</span> p[i].x=<span class="number">3</span>,p[i].y=key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">bool</span> change=<span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">opt</span>(<span class="number">0</span>,i),y=<span class="built_in">opt</span>(<span class="number">1</span>,i);</span><br><span class="line">        <span class="type">int</span> val=<span class="built_in">max</span>(x,y);</span><br><span class="line">        <span class="keyword">if</span>((m&gt;&gt;i&amp;<span class="number">1</span>)&amp;&amp;(y&lt;=x))change=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(change)res|=val&lt;&lt;i;</span><br><span class="line">        <span class="keyword">else</span> res|=<span class="built_in">opt</span>((m&gt;&gt;i&amp;<span class="number">1</span>),i)&lt;&lt;i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="递推与递归"><a href="#递推与递归" class="headerlink" title="递推与递归"></a>递推与递归</h2><blockquote>
<p>递归与递推通常是找规律以及dfs的方法进行解决,递推又是通常由大规模问题找到切入点，转化为小规模问题。</p>
</blockquote>
<h3 id="递归实现指数型枚举"><a href="#递归实现指数型枚举" class="headerlink" title="递归实现指数型枚举"></a><a href="https://www.acwing.com/problem/content/94/">递归实现指数型枚举</a></h3><blockquote>
<p>考虑二进制下每一位$0/1$即可</p>
</blockquote>
<h4 id="code-4"><a href="#code-4" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="keyword">if</span>(state&gt;&gt;i&amp;<span class="number">1</span>)cout&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>,state);</span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>,state+(<span class="number">1</span>&lt;&lt;u));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="递归实现组合型枚举"><a href="#递归实现组合型枚举" class="headerlink" title="递归实现组合型枚举"></a><a href="https://www.acwing.com/activity/content/problem/content/327/">递归实现组合型枚举</a></h3><blockquote>
<p>对数组中的数的个数存在约束，在dfs的过程中将这一约束体现出来</p>
</blockquote>
<h4 id="code-5"><a href="#code-5" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> p[<span class="number">30</span>],n,m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> v,<span class="type">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt==m)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)cout&lt;&lt;p[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=v+<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        p[cnt+<span class="number">1</span>]=i;</span><br><span class="line">        <span class="built_in">dfs</span>(i,cnt+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="递归实现排列型枚举"><a href="#递归实现排列型枚举" class="headerlink" title="递归实现排列型枚举"></a><a href="https://www.acwing.com/problem/content/96/">递归实现排列型枚举</a></h3><blockquote>
<p>dfs对每一个位置的数判断选的数种类</p>
</blockquote>
<h4 id="code-6"><a href="#code-6" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">bool</span> st[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> path[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt==n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cout&lt;&lt;path[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i])</span><br><span class="line">        &#123;</span><br><span class="line">            path[cnt]=i;</span><br><span class="line">            st[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(cnt+<span class="number">1</span>);</span><br><span class="line">            st[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="费解的开关"><a href="#费解的开关" class="headerlink" title="费解的开关"></a><a href="https://www.acwing.com/problem/content/97/">费解的开关</a></h3><blockquote>
<p>上一排的灯的状态由下一排来决定，采用二进制的方式先枚举对第一排的灯的控制进行开关，随后进行后续开关的转化，并在最后判断最后一排满足以及操作次数的限制</p>
</blockquote>
<h4 id="code-7"><a href="#code-7" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> g[<span class="number">6</span>][<span class="number">6</span>],backup[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> dx[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;,dy[]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">turn</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> xx=dx[i]+x,yy=dy[i]+y;</span><br><span class="line">        <span class="keyword">if</span>(xx&lt;<span class="number">0</span>||xx&gt;=<span class="number">5</span>||yy&lt;<span class="number">0</span>||yy&gt;=<span class="number">5</span>)<span class="keyword">continue</span>;</span><br><span class="line">        g[xx][yy]^=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)cin&gt;&gt;g[i];</span><br><span class="line">        <span class="type">int</span> res=<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> op=<span class="number">0</span>;op&lt;<span class="number">32</span>;op++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(backup,g,<span class="keyword">sizeof</span> g);</span><br><span class="line">            <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(op&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    t++;</span><br><span class="line">                    <span class="built_in">turn</span>(<span class="number">0</span>,i);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">                    <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        t++;</span><br><span class="line">                        <span class="built_in">turn</span>(i+<span class="number">1</span>,j);</span><br><span class="line">                    &#125;</span><br><span class="line">            <span class="type">bool</span> f=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(g[<span class="number">4</span>][i]==<span class="string">&#x27;0&#x27;</span>)f=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(f)res=<span class="built_in">min</span>(res,t);</span><br><span class="line">            <span class="built_in">memcpy</span>(g,backup,<span class="keyword">sizeof</span> backup);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(res&gt;<span class="number">6</span>)cout&lt;&lt;<span class="string">&quot;-1&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="奇怪的汉诺塔"><a href="#奇怪的汉诺塔" class="headerlink" title="奇怪的汉诺塔"></a><a href="https://www.acwing.com/problem/content/98/">奇怪的汉诺塔</a></h3><blockquote>
<p>3个塔移动代价是$2^n-1$,四个塔则可以选择一个塔作为媒介，即<br>所求个数代价=当前已经移动个数代价*2+剩下移动个数代价</p>
</blockquote>
<h4 id="code-8"><a href="#code-8" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> d[N],f[N];</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)d[i]=(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            f[i]=<span class="built_in">min</span>(f[i],f[j]*<span class="number">2</span>+d[i-j]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)cout&lt;&lt;f[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="约数之和"><a href="#约数之和" class="headerlink" title="约数之和"></a><a href="https://www.acwing.com/problem/content/description/99/">约数之和</a></h3><blockquote>
<p>首先对A进行分解 $A=p_1^{c_1}p_2^{c_2}…p_n^{c_n}$，<br>那么$A^B=p_1^{Bc_1}p_2^{Bc_2}…p_n^{Bc_n}$<br>约束之和就为$(1+p_1+..+p_1^{Bc_1})..(1+p_n+p_n^2+.+p_n^{Bc_n})$<br>此题因为B特别大，直接枚举肯定会TLE,因此递推枚举即可</p>
</blockquote>
<h4 id="code-9"><a href="#code-9" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">9901</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a%=mod;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!k)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>)<span class="keyword">return</span> (a%mod*<span class="built_in">sum</span>(a,k<span class="number">-1</span>)%mod+<span class="number">1</span>)%mod;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(a,k/<span class="number">2</span>)%mod*(<span class="number">1</span>+<span class="built_in">qmi</span>(a,k/<span class="number">2</span>+<span class="number">1</span>))%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=a;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s++;</span><br><span class="line">            a/=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s)res=res*<span class="built_in">sum</span>(i,b*s)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!a)res=<span class="number">0</span>;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="分形之城"><a href="#分形之城" class="headerlink" title="分形之城"></a><a href="https://www.acwing.com/problem/content/100/">分形之城</a></h3><blockquote>
<p>递推型枚举,N级城市由4个N-1级城市组合而来，对于每一块内的数字存在一定的规律</p>
</blockquote>
<h4 id="code-10"><a href="#code-10" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> n,A,B;</span><br><span class="line"></span><br><span class="line"><span class="function">PII <span class="title">calc</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n)<span class="keyword">return</span> &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> len=<span class="number">1ll</span>&lt;&lt;(n<span class="number">-1</span>),cnt=<span class="number">1ll</span>&lt;&lt;(<span class="number">2</span>*n<span class="number">-2</span>);</span><br><span class="line">    PII pos=<span class="built_in">calc</span>(n<span class="number">-1</span>,m%cnt);</span><br><span class="line">    <span class="type">int</span> x=pos.x,y=pos.y;</span><br><span class="line">    <span class="type">int</span> z=m/cnt;</span><br><span class="line">    <span class="keyword">if</span>(!z)<span class="keyword">return</span> &#123;-y-len,-x+len&#125;;</span><br><span class="line">    <span class="keyword">if</span>(z==<span class="number">1</span>)<span class="keyword">return</span> &#123;x+len,y+len&#125;;</span><br><span class="line">    <span class="keyword">if</span>(z==<span class="number">2</span>)<span class="keyword">return</span> &#123;x+len,y-len&#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;y-len,x-len&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;A&gt;&gt;B;</span><br><span class="line">        PII a=<span class="built_in">calc</span>(n,A<span class="number">-1</span>);</span><br><span class="line">        PII b=<span class="built_in">calc</span>(n,B<span class="number">-1</span>);</span><br><span class="line">        <span class="type">double</span> x = a.x-b.x;</span><br><span class="line">        <span class="type">double</span> y = a.y-b.y;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.0lf\n&quot;</span>,<span class="built_in">sqrt</span>(x*x+y*y)*<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="前缀和与差分"><a href="#前缀和与差分" class="headerlink" title="前缀和与差分"></a>前缀和与差分</h2><blockquote>
<p>前缀和:前面所有数的和<br>差分:当前数与前面这个数的差</p>
</blockquote>
<h3 id="激光炸弹"><a href="#激光炸弹" class="headerlink" title="激光炸弹"></a><a href="https://www.acwing.com/problem/content/101/">激光炸弹</a></h3><blockquote>
<p>二维前缀差分以及容斥原理<br>区域炸弹数量=$f[i][j]-f[i-r][j]-f[i][j-r]+f[i-r][j-r]$</p>
</blockquote>
<h4 id="code-11"><a href="#code-11" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5050</span>;</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> n,r;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;r;</span><br><span class="line">    r=<span class="built_in">min</span>(r,<span class="number">5000</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b,c;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        f[a+<span class="number">1</span>][b+<span class="number">1</span>]+=c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;N;j++)</span><br><span class="line">            f[i][j]+=f[i<span class="number">-1</span>][j]+f[i][j<span class="number">-1</span>]-f[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=r;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=r;j&lt;N;j++)</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,f[i][j]-f[i-r][j]-f[i][j-r]+f[i-r][j-r]);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="IncDec序列"><a href="#IncDec序列" class="headerlink" title="IncDec序列"></a><a href="https://www.acwing.com/problem/content/102/">IncDec序列</a></h3><blockquote>
<p>先对原数组进行差分,对$[l,r]$操作就是对l位置操作以及r+1位置进行相反操作</p>
</blockquote>
<h4 id="code-12"><a href="#code-12" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N],d[N],n;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)d[i]=a[i]-a[i<span class="number">-1</span>];</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(d[i]&gt;<span class="number">0</span>)l+=d[i];</span><br><span class="line">        <span class="keyword">else</span> r-=d[i];</span><br><span class="line">    cout&lt;&lt;<span class="built_in">min</span>(l,r)+<span class="built_in">abs</span>(l-r)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">abs</span>(l-r)+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="最高的牛"><a href="#最高的牛" class="headerlink" title="最高的牛"></a><a href="https://www.acwing.com/problem/content/103/">最高的牛</a></h3><blockquote>
<p>使得所有牛的身高尽可能高,可以贪心来看,先求每只牛的身高与身高的MAX求取相对值,使得最高的牛身高取上限,其余的牛皆与最高身高求相对值</p>
</blockquote>
<h4 id="code-13"><a href="#code-13" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e4</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line"><span class="type">int</span> n,p,h,m;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    set&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; existed;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;p&gt;&gt;h&gt;&gt;m;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        <span class="keyword">if</span>(l&gt;r)<span class="built_in">swap</span>(l,r);</span><br><span class="line">        <span class="keyword">if</span>(!existed.<span class="built_in">count</span>(&#123;l,r&#125;))</span><br><span class="line">        &#123;</span><br><span class="line">            existed.<span class="built_in">insert</span>(&#123;l,r&#125;);</span><br><span class="line">            s[l+<span class="number">1</span>]--;</span><br><span class="line">            s[r]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s[i]+=s[i<span class="number">-1</span>];</span><br><span class="line">    <span class="type">int</span> k=s[p];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s[i]+=-k+h;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;s[i]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><blockquote>
<p>二分通常用来求具有单调性特征的问题</p>
</blockquote>
<h3 id="最佳牛围栏"><a href="#最佳牛围栏" class="headerlink" title="最佳牛围栏"></a><a href="https://www.acwing.com/problem/content/104/">最佳牛围栏</a></h3><blockquote>
<p>二分答案即可</p>
</blockquote>
<h4 id="code-14"><a href="#code-14" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line"><span class="type">int</span> n,f;</span><br><span class="line"><span class="type">double</span> sum[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)sum[i]=sum[i<span class="number">-1</span>]+s[i]-mid;</span><br><span class="line">    <span class="type">double</span> mins=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=f,j=<span class="number">0</span>;i&lt;=n;i++,j++)</span><br><span class="line">    &#123;</span><br><span class="line">        mins=<span class="built_in">min</span>(mins,sum[j]);</span><br><span class="line">        <span class="keyword">if</span>(sum[i]-mins&gt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;f;</span><br><span class="line">    <span class="type">double</span> l=<span class="number">0</span>,r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;s[i];   </span><br><span class="line">        r=<span class="built_in">max</span>(r,(<span class="type">double</span>)s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">1e-5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;(<span class="type">int</span>)(r*<span class="number">1000</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="特殊排序"><a href="#特殊排序" class="headerlink" title="特殊排序"></a><a href="https://www.acwing.com/problem/content/115/">特殊排序</a></h3><blockquote>
<p>交互题,根据Query输出题目中的顺序关系</p>
</blockquote>
<h4 id="code-15"><a href="#code-15" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Forward declaration of compare API.</span></span><br><span class="line"><span class="comment">// bool compare(int a, int b);</span></span><br><span class="line"><span class="comment">// return bool means whether a is less than b.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">specialSort</span><span class="params">(<span class="type">int</span> N)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=(N+<span class="number">1</span>)/<span class="number">2</span>;i;i--)&#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">if</span>(N-i+<span class="number">1</span>!=i)a.<span class="built_in">push_back</span>(N-i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">stable_sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),compare);</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><blockquote>
<p>题目中的一小部分，不做过多解释</p>
</blockquote>
<h3 id="电影"><a href="#电影" class="headerlink" title="电影"></a><a href="https://www.acwing.com/problem/content/105/">电影</a></h3><blockquote>
<p>记录最大值和次大值</p>
</blockquote>
<h4 id="code-16"><a href="#code-16" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],mp[a[i]]++;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)cin&gt;&gt;b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)cin&gt;&gt;c[i];</span><br><span class="line">    <span class="type">int</span> ans1=<span class="number">0</span>,ans2=<span class="number">0</span>,id=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ans1&lt;mp[b[i]])&#123;</span><br><span class="line">            ans1=mp[b[i]];</span><br><span class="line">            ans2=mp[c[i]];</span><br><span class="line">            id=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ans1==mp[b[i]]&amp;&amp;ans2&lt;mp[c[i]])&#123;</span><br><span class="line">            ans2=mp[c[i]];</span><br><span class="line">            id=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;id&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="货舱选址"><a href="#货舱选址" class="headerlink" title="货舱选址"></a><a href="https://www.acwing.com/problem/content/106/">货舱选址</a></h3><blockquote>
<p>选中位数为最优</p>
</blockquote>
<h4 id="code-17"><a href="#code-17" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;f[i];</span><br><span class="line">    <span class="built_in">nth_element</span>(f,f+n/<span class="number">2</span>,f+n);</span><br><span class="line">    <span class="type">int</span> k=f[n/<span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)ans+=<span class="built_in">abs</span>(f[i]-k);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      <categories>
        <category>算法竞赛进阶指南</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>动态规划</title>
    <url>/2022/02/08/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="树形DP"><a href="#树形DP" class="headerlink" title="树形DP"></a>树形DP</h2><h3 id="洛谷p1352"><a href="#洛谷p1352" class="headerlink" title="洛谷p1352"></a>洛谷p1352</h3><h4 id="简单版本"><a href="#简单版本" class="headerlink" title="简单版本"></a>简单版本</h4><blockquote>
<p>树形DP的常规套路，考虑子节点对父节点的影响即可</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> n,x,w[N],f[N][<span class="number">2</span>];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    f[u][<span class="number">1</span>]=w[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:v[u])<span class="built_in">dfs</span>(x),f[u][<span class="number">1</span>]+=f[x][<span class="number">0</span>],f[u][<span class="number">0</span>]+=<span class="built_in">max</span>(f[x][<span class="number">1</span>],f[x][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        v[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;w[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(f[<span class="number">1</span>][<span class="number">1</span>],f[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="升级版-背包-树形DP"><a href="#升级版-背包-树形DP" class="headerlink" title="升级版(背包+树形DP)"></a>升级版(背包+树形DP)</h4><blockquote>
<p>相较于简单版本，对物品容量增加了限制<br>对于父节点，每次遍历子节点，并对子节点做一次背包</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="type">int</span> n,x,w[N],f[N][N][<span class="number">2</span>],m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:v[u])&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=m;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                f[u][i][<span class="number">0</span>]=<span class="built_in">max</span>(f[u][i][<span class="number">0</span>],f[u][i-j][<span class="number">0</span>]+<span class="built_in">max</span>(f[x][j][<span class="number">0</span>],f[x][j][<span class="number">1</span>]));</span><br><span class="line">                f[u][i][<span class="number">1</span>]=<span class="built_in">max</span>(f[u][i][<span class="number">1</span>],f[u][i-j][<span class="number">1</span>]+f[x][j][<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m;i;i--)f[u][i][<span class="number">1</span>]=<span class="built_in">max</span>(f[u][i][<span class="number">1</span>],f[u][i<span class="number">-1</span>][<span class="number">1</span>]+w[u]);</span><br><span class="line">    f[u][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        v[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;w[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(f[<span class="number">1</span>][m][<span class="number">1</span>],f[<span class="number">1</span>][m][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="换根DP"><a href="#换根DP" class="headerlink" title="换根DP"></a>换根DP</h2><blockquote>
<p> 换根DP经典题目套路，通常第一遍dfs1算出子节点对父节点的影响，第二次dfs算出父节点对子节点的影响。 </p>
</blockquote>
<h3 id="codeforces-1187-E"><a href="#codeforces-1187-E" class="headerlink" title="codeforces 1187 E"></a>codeforces 1187 E</h3><blockquote>
<p>Ⅰ 在该题中对于每个点$u$利用dfs的遍历顺序算出子节点对于该点的影响，并存于f[u]中，此时就有$f[u]=\sum\limits_{x\in u}f[x]$<br>Ⅱ 在第二次dfs时，算出父节点对于子节点的贡献w[x],此时每次遍历时，求得的父节点价值为w[u],可以求得子节点的价值为w[x]=w[u]+f[u]-f[x]-sz[x]+n-sz[x]<br>III 最后一步为求父节点和子节点总价值，即可求得该点的Max值，求所有点的Max中的Max即可。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;PII;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> st[<span class="number">200005</span>];</span><br><span class="line"><span class="type">int</span> n,a,b,f[<span class="number">200005</span>],sz[<span class="number">200005</span>],w[<span class="number">200005</span>];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v[<span class="number">200005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">	st[u]=<span class="literal">true</span>;</span><br><span class="line">	sz[u]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> x:v[u])</span><br><span class="line">		<span class="keyword">if</span>(!st[x])&#123;</span><br><span class="line">			<span class="built_in">dfs1</span>(x);</span><br><span class="line">			sz[u]+=sz[x];</span><br><span class="line">			f[u]+=f[x];</span><br><span class="line">		&#125;</span><br><span class="line">	f[u]+=sz[u];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">	st[u]=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> x:v[u])</span><br><span class="line">		<span class="keyword">if</span>(!st[x])&#123;</span><br><span class="line">			w[x]=w[u]+f[u]-f[x]-sz[x]+n-sz[x];</span><br><span class="line">			<span class="built_in">dfs2</span>(x);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		v[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">		v[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(st,<span class="number">0</span>,<span class="keyword">sizeof</span> st);</span><br><span class="line">	<span class="built_in">dfs1</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">memset</span>(st,<span class="number">0</span>,<span class="keyword">sizeof</span> st);</span><br><span class="line">	<span class="built_in">dfs2</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans=<span class="built_in">max</span>(ans,f[i]+w[i]);</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//	ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//  cin.tie(nullptr);</span></span><br><span class="line">	<span class="type">int</span> T=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//	cin&gt;&gt;T;</span></span><br><span class="line">	<span class="keyword">while</span>(T--)</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="数位DP"><a href="#数位DP" class="headerlink" title="数位DP"></a>数位DP</h2><blockquote>
<p>数位dp经典做题方法，init的初始化时数位dp的一大经典特色，其次就是分析啦</p>
</blockquote>
<h3 id="CodeForce1036C-Classy-Numbers"><a href="#CodeForce1036C-Classy-Numbers" class="headerlink" title="CodeForce1036C Classy Numbers"></a>CodeForce1036C Classy Numbers</h3><blockquote>
<p>此题题意，在$[l,r]$中，找出非0数不超过3的数的个数</p>
</blockquote>
<h4 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h4><blockquote>
<p>可以定义一个数组$f[n][m][s]$，其中n为数位个数，m为第i位的数，s为非0的数字个数。在做完init之后，剩下的就是进行dp分解了，根据闫氏dp分析法，从高位向低位递推，对于第i位分为$[0,a_i-1],a_i$两种情况，我们只需算第一种情况，同时，每次算时，需一个last值记录非0数的个数对后续dp的影响，在最后判断等于这个数时是否满足，根据情况进行加减</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     a[n]  第n位</span><br><span class="line">     / \</span><br><span class="line">    /   \</span><br><span class="line">0~a[n]-1  a[n-1]</span><br><span class="line">         / \</span><br><span class="line">        /   \</span><br><span class="line"> 0~a[n-1]-1  ...</span><br><span class="line">             / \</span><br><span class="line">            /   \</span><br><span class="line">       0~a[0]-1 a[0]</span><br></pre></td></tr></table></figure>
<h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> l,r,f[<span class="number">20</span>][<span class="number">10</span>][<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)f[<span class="number">1</span>][i][i!=<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">9</span>;k++)&#123;</span><br><span class="line">				f[i][j][<span class="number">4</span>]+=f[i<span class="number">-1</span>][k][<span class="number">4</span>];</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> u=<span class="number">0</span>;u&lt;=<span class="number">3</span>;u++)&#123;</span><br><span class="line">					f[i][j][u+(j!=<span class="number">0</span>)]+=f[i<span class="number">-1</span>][k][u];</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dp</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!n)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;nums;</span><br><span class="line">	<span class="keyword">while</span>(n)nums.<span class="built_in">push_back</span>(n%<span class="number">10</span>),n/=<span class="number">10</span>;</span><br><span class="line">	<span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> last=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=nums.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="type">int</span> x=nums[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=(i==nums.<span class="built_in">size</span>());j&lt;x;j++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">3</span>;k++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(k+last&lt;=<span class="number">3</span>)res+=f[i+<span class="number">1</span>][j][k];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		last+=(x!=<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(last&lt;=<span class="number">3</span>)res++;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">init</span>();</span><br><span class="line">	<span class="type">int</span> T;</span><br><span class="line">	cin&gt;&gt;T;</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">		cout&lt;&lt;<span class="built_in">dp</span>(r)-<span class="built_in">dp</span>(l<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="状态压缩dp"><a href="#状态压缩dp" class="headerlink" title="状态压缩dp"></a>状态压缩dp</h2><blockquote>
<p>状态压缩dp的难点在于对于二进制的理解</p>
</blockquote>
<h3 id="Codeforce-1238-E-Keyboard-Purchase"><a href="#Codeforce-1238-E-Keyboard-Purchase" class="headerlink" title="Codeforce 1238 E.Keyboard Purchase"></a>Codeforce 1238 E.Keyboard Purchase</h3><blockquote>
<p>寻找出最小的排列代价，使得$\sum{|pos<em>i-pos</em>{i-1}|}$最小</p>
</blockquote>
<h4 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h4><blockquote>
<p>预处理出g数组(相邻字母的每个种类个数),因为m&lt;=20,可以对其进行二进制枚举，对于每次枚举,当前状况必定由前一状态得来,此次新的枚举，其代价是前一状态的代价加上$\sum\limits<em>{j\in算过}\sum\limits</em>{k\in未算}g[j][k]$</p>
</blockquote>
<h4 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> g[<span class="number">26</span>][<span class="number">26</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">1</span>&lt;&lt;<span class="number">20</span>];</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	cin&gt;&gt;s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)g[s[i<span class="number">-1</span>]-<span class="string">&#x27;a&#x27;</span>][s[i]-<span class="string">&#x27;a&#x27;</span>]++,g[s[i]-<span class="string">&#x27;a&#x27;</span>][s[i<span class="number">-1</span>]-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">	<span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">	f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">1</span>&lt;&lt;m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> k=j+<span class="number">1</span>;k&lt;m;k++)</span><br><span class="line">				<span class="keyword">if</span>((i&gt;&gt;j&amp;<span class="number">1</span>)^(i&gt;&gt;k&amp;<span class="number">1</span>))</span><br><span class="line">					sum+=g[j][k];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			<span class="keyword">if</span>(i&gt;&gt;j&amp;<span class="number">1</span>)</span><br><span class="line">				f[i]=<span class="built_in">min</span>(f[i-(<span class="number">1</span>&lt;&lt;j)]+sum,f[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;f[(<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>简单算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>线性代数</title>
    <url>/2022/02/26/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理</title>
    <url>/2022/02/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机基础</category>
      </categories>
      <tags>
        <tag>计算机知识</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统</title>
    <url>/2022/02/26/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机基础</category>
      </categories>
      <tags>
        <tag>计算机知识</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络</title>
    <url>/2022/02/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h2 id="第一章·概述"><a href="#第一章·概述" class="headerlink" title="第一章·概述"></a>第一章·概述</h2><h3 id="计算机网络在信息时代中的作用"><a href="#计算机网络在信息时代中的作用" class="headerlink" title="计算机网络在信息时代中的作用"></a>计算机网络在信息时代中的作用</h3><ul>
<li>三网融合指:电信网络,有线电视网络,计算机网络</li>
<li>互联网的两大特点: 连通性和共享性</li>
</ul>
<h3 id="互联网概述"><a href="#互联网概述" class="headerlink" title="互联网概述"></a>互联网概述</h3><h4 id="网络的网络"><a href="#网络的网络" class="headerlink" title="网络的网络"></a>网络的网络</h4><ul>
<li>计算机网络: 由若干节点和连接这些节点的链路组成</li>
<li>网络把许多计算机连接在一起,而互联网则把许多网络通过一些路由器连接在一起,与网络相连的计算机常称为主机.</li>
</ul>
<h4 id="互联网基础结构发展的三个阶段"><a href="#互联网基础结构发展的三个阶段" class="headerlink" title="互联网基础结构发展的三个阶段"></a>互联网基础结构发展的三个阶段</h4><ul>
<li>1969 – 1990 从单个网络 ARPANET 向互联网发展。<blockquote>
<p>1983 年为互联网的诞生时间。</p>
</blockquote>
</li>
<li>1985 – 1993 建成了三级结构的互联网 。</li>
<li>1993 – 现在 全球范围的多层次 <code>ISP(互联网网络服务提供者/Internet Service Provider)</code> 结构的互联网。</li>
</ul>
<h4 id="互联网的标准化工作"><a href="#互联网的标准化工作" class="headerlink" title="互联网的标准化工作"></a>互联网的标准化工作</h4><ul>
<li>RFC文档建立阶段<blockquote>
<p>1)互联网草案<br>2)建议标准<br>3)互联网标准</p>
</blockquote>
</li>
</ul>
<h3 id="互联网组成"><a href="#互联网组成" class="headerlink" title="互联网组成"></a>互联网组成</h3><p>1)<code>边缘部分</code>:由所有连接在互联网上的主机组成。这部分是用户直接使用的,用来进行通信和资源共享。<br>2)<code>核心部分</code>:有大量网络和连接这些网络的路由器组成.这部分是为边缘部分提供服务的</p>
<h4 id="互联网的边缘部分"><a href="#互联网的边缘部分" class="headerlink" title="互联网的边缘部分"></a>互联网的边缘部分</h4><ul>
<li>端系统:连接在互联网边缘部分的所有主机(大型计算机常被称为服务器)</li>
<li>计算机之间的通信:<code>主机A的某个进程和主机B上的另一个进程进行通信.</code></li>
<li>端系统之间的通信方式:<code>客户-服务器方式(C/S方式)和对等方式(P2P方式).</code></li>
</ul>
<h4 id="互联网的核心部分"><a href="#互联网的核心部分" class="headerlink" title="互联网的核心部分"></a>互联网的核心部分</h4><blockquote>
<p>在网络核心部分其特殊作用的是路由器,路由器是实现分组交换的关键构件,其任务是转发收到的分组。</p>
</blockquote>
<h4 id="交换技术"><a href="#交换技术" class="headerlink" title="交换技术"></a>交换技术</h4><ul>
<li>电路交换<blockquote>
<p>在通话的全部时间内,通话的两个用户始终占用端到端的资源,路线传输效率很低</p>
</blockquote>
</li>
<li>分组交换<blockquote>
<p>分组交换技术采用储存转发技术。在计算机网络中,主机是为用户进行信息处理的,路由器则用来转发分组。</p>
</blockquote>
</li>
</ul>
<h3 id="计算机网络的类别"><a href="#计算机网络的类别" class="headerlink" title="计算机网络的类别"></a>计算机网络的类别</h3><h4 id="计算机网络的定义-未统一"><a href="#计算机网络的定义-未统一" class="headerlink" title="计算机网络的定义(未统一)"></a>计算机网络的定义(未统一)</h4><p>计算机网络主要是由一些通用的、可编程的硬件互连而成的，而这些硬件并非专门用来实现某一特定目的（例如，传送数据或视频信号）。这些可编程的硬件能够用来传送多种不同类型的数据，并能支持广泛的和日益增长的应用。</p>
<h4 id="几种不同类别的计算机网络"><a href="#几种不同类别的计算机网络" class="headerlink" title="几种不同类别的计算机网络"></a>几种不同类别的计算机网络</h4><ul>
<li>按网络作用范围<blockquote>
<p>(1)<code>广域网WAN (Wide Area Network)</code>通常为几十到几千公里。有时也称为远程网(long haul network)。是互联网的核心部分。<br>(2)<code>城域网MAN(Metropolitan Area Network)</code>作用范围一般是一个城市，作用距离约为 5~50 公里。<br>(3)<code>局域网LAN(Local Area Network)</code>局限在较小的范围（如 1 公里左右）。通常采用高速通信线路。<br>(4)<code>个人区域网PAN(Personal Area Network)</code>范围很小，大约在 10 米左右。有时也称为无线个人区域网 WPAN (Wireless PAN)。</p>
</blockquote>
</li>
</ul>
<p><code>若中央处理机之间的距离非常近（如仅 1 米甚至更小些），则一般就称之为多处理机系统，而不称它为计算机网络。</code></p>
<ul>
<li>按网络使用者分<blockquote>
<p><code>公用网(public network)</code>按规定交纳费用的人都可以使用的网络。也可称为公众网。<br><code>专用网(private network)</code>为特殊业务工作的需要而建造的网络。</p>
</blockquote>
</li>
<li>用来把用户接入到互联网的网络<blockquote>
<p><code>接入网(Access Network)</code>用于将用户接入互联网。</p>
</blockquote>
</li>
</ul>
<h3 id="计算机网络的性能"><a href="#计算机网络的性能" class="headerlink" title="计算机网络的性能"></a>计算机网络的性能</h3><h4 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h4><ul>
<li>速率<blockquote>
<p>单位时间传输的单个二进制数字个数</p>
</blockquote>
</li>
<li>带宽(时域&amp;频域)<blockquote>
<p>一条通信链路的“带宽”越宽，其所能传输的“最高数据率”也越高。</p>
</blockquote>
</li>
<li>吞吐量<blockquote>
<p>单位时间内通过某个网络（或信道、接口）的实际数据量。</p>
</blockquote>
</li>
<li><p>时延</p>
<blockquote>
<p><code>发送时延</code>主机或路由器发送数据帧数所需要的时间<br><code>传播时延</code>电磁波在信道中传播一定的距离需要花费的时间<br>处理时延<br>排队时延</p>
</blockquote>
<p>  总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延</p>
</li>
<li><p>时延带宽积</p>
<blockquote>
<p>时延带宽积 = 传播时延 ✖ 带宽</p>
</blockquote>
</li>
<li><p>往返时间RTT</p>
</li>
<li><p>利用率</p>
<blockquote>
<p>$D$为当前时延,U为利用率,$D_0$空闲时延<br>$D=\frac{D_0}{1-U}$</p>
</blockquote>
</li>
<li><p>计算机网络的非性能特征</p>
<blockquote>
<p>费用、质量、标准化、可靠性、可扩展性和可升级性、易于管理和维护</p>
</blockquote>
</li>
</ul>
<h3 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h3><p><code>OSI标准 TCP/IP标准</code></p>
<h4 id="协议与划分层次"><a href="#协议与划分层次" class="headerlink" title="协议与划分层次"></a>协议与划分层次</h4><ul>
<li><p><code>网络协议 (network protocol)</code>，简称为协议，是为进行网络中的数据交换而建立的规则、标准或约定。</p>
</li>
<li><p>三个组成要素:</p>
<blockquote>
<p>①语法：数据与控制信息的结构或格式 。<br>②语义：需要发出何种控制信息，完成何种动作以及做出何种响应。<br>③同步：事件实现顺序的详细说明。 </p>
</blockquote>
</li>
<li>分层优点<blockquote>
<p>各层之间是独立的,灵活性好,结构上可分割开,易于实现和维护,能促进标准化工作。</p>
</blockquote>
</li>
<li>各层主要功能<blockquote>
<p><code>差错控制</code>：使相应层次对等方的通信更加可靠。<br><code>流量控制</code>：发送端的发送速率必须使接收端来得及接收，不要太快。<br><code>分段和重装</code>：发送端将要发送的数据块划分为更小的单位，在接收端将其还原。<br><code>复用和分用</code>：发送端几个高层会话复用一条低层的连接，在接收端再进行分用。<br><code>连接建立和释放</code>：交换数据前先建立一条逻辑连接，数据传送结束后释放连接。</p>
</blockquote>
</li>
</ul>
<h4 id="具有五层协议的体系结构"><a href="#具有五层协议的体系结构" class="headerlink" title="具有五层协议的体系结构"></a>具有五层协议的体系结构</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">OSI</th>
<th style="text-align:center">TCP/IP</th>
<th style="text-align:center">五层协议</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">应用层</td>
</tr>
<tr>
<td style="text-align:center">表示层</td>
<td style="text-align:center">应用层</td>
<td style="text-align:center">应用层</td>
</tr>
<tr>
<td style="text-align:center">会话层</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">运输层</td>
<td style="text-align:center">运输层</td>
<td style="text-align:center">运输层</td>
</tr>
<tr>
<td style="text-align:center">网络层</td>
<td style="text-align:center">网络层</td>
<td style="text-align:center">网络层</td>
</tr>
<tr>
<td style="text-align:center">数据链路层</td>
<td style="text-align:center">链路层(网络接口层)</td>
<td style="text-align:center">数据链路层</td>
</tr>
<tr>
<td style="text-align:center">物理层</td>
<td style="text-align:center"></td>
<td style="text-align:center">物理层</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><p>应用层</p>
<blockquote>
<p>应用层的任务:通过应用进程间的交互来完成特定网络应用。<br>应用层协议的定义:应用进程间通信和交互的规则<br>应用层交互数据单元称为报文</p>
</blockquote>
</li>
<li><p>运输层</p>
<blockquote>
<p>运输层的任务:向两台主机中进程之间的通信提供通用的数据传输服务  </p>
</blockquote>
<p>  主要使用两种协议:</p>
<blockquote>
<p><code>传输控制协议TCP</code>:提供面向连接的,可靠的数据传输服务,其数据传输的单位是报文段<br><code>用户数据报协议UDP</code>:提供无连接的尽最大努力的数据传输服务,其数据传输的单位是用户数据段</p>
</blockquote>
</li>
<li><p>网络层</p>
<blockquote>
<p>网络层协议是:无连接的网际协议 IP  (Internet Protocol) 和许多路由选择协议<br>IP 协议分组也叫做 IP 数据报，或简称为数据报。</p>
</blockquote>
</li>
<li><p>数据链路层</p>
<blockquote>
<p>实现两个相邻节点之间的可靠通信。</p>
</blockquote>
</li>
</ul>
<ul>
<li><p>物理层</p>
<blockquote>
<p>确定连接电缆的插头应当有多少根引脚，以及各引脚应如何连接。</p>
</blockquote>
</li>
</ul>
<p><img src="/image/jiwang/Net.png" alt="数据在各层间的传递"></p>
<h4 id="实体，协议，服务和服务访问点"><a href="#实体，协议，服务和服务访问点" class="headerlink" title="实体，协议，服务和服务访问点"></a>实体，协议，服务和服务访问点</h4><blockquote>
<p><code>实体</code> (entity) ：表示任何可发送或接收信息的硬件或软件进程。<br><code>协议</code>：控制两个对等实体进行通信的规则的集合。<br>在协议的控制下，两个对等实体间的通信使得本层能够<code>向上一层提供服务</code>。<br>要实现本层协议，还需要使用<code>下层所提供的服务</code>。</p>
</blockquote>
<p>协议是水平的,服务是垂直的</p>
<blockquote>
<p>在同一系统中相邻两层的实体进行交互（即交换信息） 的地方，通常称为服务访问点 SAP (Service Access Point)。<br>SAP 是一个抽象的概念，它实际上就是一个逻辑接口。<br>OSI 把层与层之间交换的数据的单位称为服务数据单元 SDU (Service Data Unit)。<br>SDU 可以与 PDU 不一样。</p>
</blockquote>
<h4 id="TCP-IP的体系结构"><a href="#TCP-IP的体系结构" class="headerlink" title="TCP/IP的体系结构"></a>TCP/IP的体系结构</h4><blockquote>
<p>路由器在转发分组时最高只用到网际层，没有使用运输层和应用层。 </p>
</blockquote>
]]></content>
      <categories>
        <category>计算机基础</category>
      </categories>
      <tags>
        <tag>计算机知识</tag>
      </tags>
  </entry>
</search>
